name: Microservices CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  # Step 1: Perform Unit Tests for Each Microservice
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Step 1: Checkout the code

      - name: Set up Node.js
        uses: actions/setup-node@v4  # Step 2: Set up Node
        with:
          node-version: '16'

      - name: Install Newman (Postman CLI)
        run: npm install -g newman  # Step 3: Install Newman

      # Step 4.1: Build docker image for calc microservice (unit testing)
      - name: Build Calc Microservice (Unit)
        run: docker build -t calc-test -f ./src/calc/Dockerfile_test ./src/calc

      # Step 4.2: Run the container for unit testing (detached mode)
      - name: Run Calc Microservice (Unit)
        run: docker run -d --name calc-test -p 5000:5000 calc-test

      # Step 4.3: Wait for the service to start (to avoid timing issues)
      - name: Wait for Calc Service to be ready
        run: sleep 15  # Adjust the sleep time if the service takes longer to start

      # Step 4.4: Run tests for calc microservice with Newman
      - name: Run Calc Unit Tests
        run: newman run tests/calc_ut.postman_collection.json

      # Step 4.5: Stop the container after testing
      - name: Stop Calc Microservice
        run: docker stop calc-test

      - name: Build String Microservice (Unit)
        run: docker build -t string-test -f ./src/string/Dockerfile_test ./src/calc

      - name: Run String Microservice (Unit)
        run: docker run -d --name string-test -p 5000:5000 string-test

      - name: Wait for String Service to be ready
        run: sleep 15  

      - name: Run String Unit Tests
        run: newman run tests/string_ut.postman_collection.json

      - name: Stop String Microservice
        run: docker stop string-test

  # Step 2: Build and Test the Whole Architecture (Integration Tests)
  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Step 1: Checkout the code

      - name: Install Docker Compose
        run: |
          # Step 4: Install Docker Compose
          curl -L "https://github.com/docker/compose/releases/download/v2.15.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose

      - name: Build the Entire Architecture
        run: docker-compose build  # Step 5: Build the architecture using docker-compose

      - name: Start All Services
        run: docker-compose up -d  # Step 6: Start services in detached mode

      - name: Wait for services to be ready
        run: sleep 15  # Step 6: Wait to ensure all services are running

      - name: Run Integration Tests
        run: newman run tests/integration.postman_collection.json  # Step 7: Run integration tests

      - name: Stop All Services
        run: docker-compose down  # Step 7: Stop all services after tests
